apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: homework
  labels:
    les: kubernetes-intro
data:
  nginx.conf: |
    events {}
    http {
      server {
          listen 8000;
          root /homework;

          location / {
            autoindex on;
          }
      }
    }
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mypod-deployment
  labels:
    app: nginx
  namespace: homework
spec:
  replicas: 3
  selector:
    matchLabels:
      run: web-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        run: web-server
    spec:
      nodeSelector:
        homework: "true"
      volumes:
      - name: shared-volume
        emptyDir: {}
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      initContainers:
        - name: init-container
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              d=$(date +'%Y-%m-%d %H:%M:%S')
              echo "<html><body><h1>My pod in k3s<br> Created: $d<br> hostname: $(hostname)<br>  </h1></body></html>" > /init/index.html
          volumeMounts:
            - name: shared-volume
              mountPath: /init
      containers:
        - name: web-server
          image: nginx:alpine
          ports:
            - containerPort: 8000
          readinessProbe:
            exec:
              command: ["test", "-f", "/homework/index.html"]
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: shared-volume
              mountPath: /homework
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "rm -f /homework/index.html"]
---

apiVersion: v1
kind: Service
metadata:
  name: srv-mypod
  namespace: homework
  labels:
    run: web-server
spec:
  selector:
    run: web-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-ingress
  namespace: homework
  labels:
    les: kubernetes-intro
spec:
  ingressClassName: traefik
  rules:
    - host: mypod.my.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: srv-mypod
                port:
                  number: 80
